ALSO:

Pointer wird erstmal so übernommen, tatsächliche Erfassung geschieht trotzdem im Manager, über RayCast, wie beim Austronauten.
Pro: 
- Gleiche Struktur wie bei Movement
- Kann Wände berücksichtigen, was nur durch Winkel nicht geht
- Bei vielen Targets evtl. performanter nur einen RayCast zu machen, als Zeug innerhalb von jedem zu machen
- Wenn es auch noch einen Cursor geben soll, bzw. Interaktionsobjekte ohne Pointer, macht das Platzieren innerhalb UiPointer keinen Sinn (Holistik)
	-> Klassenstruktur nochmal überdenken, vielleicht sollte DirectedFocus doch eine eigene Klasse sein oder so (damit andere interaktive Objekte keinen Pointer drin haben etc.) ...
Con: 
- einstellbare Winkel wären nice
- Collider fressen Performance, wären bei Punkt-basiertem nicht nötig


Nachricht:

Hallo Roland, 
ich bin jetzt dabei, die Mechanismen in Unity umzusetzen. 
Dabei ist es so, dass viele der Sachen für die HoloLens schon gemacht wurden und der Code vorliegt.
Es wird natürlich ein gewisser Eigenanteil erwartet, aber ich denke, es ist auch nicht sinnvoll, das Rad neu zu erfinden. Wie würdest du mir raten, vorzugehen?